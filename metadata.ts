/* eslint-disable */
export default async () => {
    const t = {
        ["./src/user/entities/user.entity"]: await import("./src/user/entities/user.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./src/user/entities/user.entity"), { "User": { id: { required: true, type: () => Number, description: "this decorator will help to auto generate id for the table." }, name: { required: true, type: () => String }, username: { required: true, type: () => String }, email: { required: true, type: () => String }, age: { required: true, type: () => Number }, password: { required: true, type: () => String }, gender: { required: true, type: () => String } } }], [import("./src/user/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String, minLength: 2 }, username: { required: true, type: () => String, minLength: 3 }, email: { required: true, type: () => String }, age: { required: true, type: () => Number }, gender: { required: true, type: () => String }, password: { required: true, type: () => String, pattern: "passwordRegEx" } } }], [import("./src/user/dto/update-user.dto"), { "UpdateUserDto": {} }]], "controllers": [[import("./src/app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./src/user/user.controller"), { "UserController": { "create": { description: "Post decorator represents method of request as we have used post decorator the method\nof this API will be post.\nso the API URL to create User will be\nPOST http://localhost:3000/user", type: t["./src/user/entities/user.entity"].User }, "findAll": { description: "we have used get decorator to get all the user's list\nso the API URL will be\nGET http://localhost:3000/user", type: [t["./src/user/entities/user.entity"].User] }, "findOne": { description: "we have used get decorator with id param to get id from request\nso the API URL will be\nGET http://localhost:3000/user/:id", type: t["./src/user/entities/user.entity"].User }, "update": { description: "we have used patch decorator with id param to get id from request\nso the API URL will be\nPATCH http://localhost:3000/user/:id", type: t["./src/user/entities/user.entity"].User }, "remove": { description: "we have used Delete decorator with id param to get id from request\nso the API URL will be\nDELETE http://localhost:3000/user/:id" } } }]] } };
};